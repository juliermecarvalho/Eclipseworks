// <auto-generated />
using System;
using Eclipseworks.Persistencia.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eclipseworks.Persistencia.Migrations
{
    [DbContext(typeof(EclipseworksContext))]
    [Migration("20231201003230_tarefaid")]
    partial class tarefaid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Comentario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("TarefaId")
                        .HasColumnType("bigint")
                        .HasColumnName("tarefa_id");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("texto");

                    b.HasKey("Id");

                    b.HasIndex("TarefaId");

                    b.ToTable("comentarios", (string)null);
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Historico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Campo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("campo");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2")
                        .HasColumnName("data");

                    b.Property<string>("NovoValor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("novo_valor");

                    b.Property<string>("Operacao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("operacao");

                    b.Property<long>("TarefaId")
                        .HasColumnType("bigint")
                        .HasColumnName("tarefa_id");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("usuario_id");

                    b.Property<string>("ValorAntigo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("valor_antigo");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("historicos", (string)null);
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Projeto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CriadorDoProjetoId")
                        .HasColumnType("bigint")
                        .HasColumnName("criador_do_projeto_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("CriadorDoProjetoId");

                    b.ToTable("projetos", (string)null);
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Tarefa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_vencimento");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("descricao");

                    b.Property<string>("Detalhes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("detalhes");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.Property<long>("ProjetoId")
                        .HasColumnType("bigint")
                        .HasColumnName("projeto_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status ");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("tarefas", (string)null);
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Comentario", b =>
                {
                    b.HasOne("Eclipseworks.Dominio.Core.Tarefa", "Tarefa")
                        .WithMany("Comentarios")
                        .HasForeignKey("TarefaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Historico", b =>
                {
                    b.HasOne("Eclipseworks.Dominio.Core.Usuario", "Usuario")
                        .WithMany("Historicos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Projeto", b =>
                {
                    b.HasOne("Eclipseworks.Dominio.Core.Usuario", "CriadorDoProjeto")
                        .WithMany("Projetos")
                        .HasForeignKey("CriadorDoProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CriadorDoProjeto");
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Tarefa", b =>
                {
                    b.HasOne("Eclipseworks.Dominio.Core.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Tarefa", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("Eclipseworks.Dominio.Core.Usuario", b =>
                {
                    b.Navigation("Historicos");

                    b.Navigation("Projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
